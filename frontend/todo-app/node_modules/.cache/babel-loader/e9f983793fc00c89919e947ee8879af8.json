{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Ye Wyn\\\\Downloads\\\\insertteamnamehere\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Ye Wyn\\\\Downloads\\\\insertteamnamehere\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ye Wyn\\\\Downloads\\\\insertteamnamehere\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ye Wyn\\\\Downloads\\\\insertteamnamehere\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ye Wyn\\\\Downloads\\\\insertteamnamehere\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ye Wyn\\\\Downloads\\\\insertteamnamehere\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ye Wyn\\\\Downloads\\\\insertteamnamehere\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ye Wyn\\\\Downloads\\\\insertteamnamehere\\\\frontend\\\\todo-app\\\\src\\\\components\\\\todo\\\\LoginComponent.jsx\";\nimport React, { Component } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\nimport AuthenticationService from \"./AuthenticationService.js\";\nimport { Link } from 'react-router-dom';\nimport { FaBeer } from 'react-icons/fa';\n\nvar LoginComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginComponent, _Component);\n\n  function LoginComponent(props) {\n    var _this;\n\n    _classCallCheck(this, LoginComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginComponent).call(this, props));\n    _this.state = {\n      username: \"feelsbadman\",\n      password: \"\",\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    }; // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n    // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loginClicked = _this.loginClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      //console.log(this.state);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    } // handleUsernameChange(event) {\n    //     console.log(event.target.name);\n    //     this.setState(\n    //         {\n    //             [event.target.name]\n    //               :event.target.value\n    //         }\n    //     )\n    // }\n    // handlePasswordChange(event) {\n    //     console.log(event.target.value);\n    //     this.setState({password:event.target.value})\n    // }\n\n  }, {\n    key: \"loginClicked\",\n    value: function loginClicked() {\n      var _this2 = this;\n\n      //sept,dummy\n      // if(this.state.username==='sept' && this.state.password==='dummy'){\n      //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n      //     this.props.history.push(`/welcome/${this.state.username}`)\n      //     //this.setState({showSuccessMessage:true})\n      //     //this.setState({hasLoginFailed:false})\n      // }\n      // else {\n      //     this.setState({showSuccessMessage:false})\n      //     this.setState({hasLoginFailed:true})\n      // }\n      // AuthenticationService\n      // .executeBasicAuthenticationService(this.state.username, this.state.password)\n      // .then(() => {\n      //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n      //     this.props.history.push(`/welcome/${this.state.username}`)\n      // }).catch( () =>{\n      //     this.setState({showSuccessMessage:false})\n      //     this.setState({hasLoginFailed:true})\n      // })\n      AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(function (response) {\n        AuthenticationService.registerSuccessfulLoginForJwt(_this2.state.username, response.data.token);\n\n        _this2.props.history.push(\"/welcome/\".concat(_this2.state.username));\n      }).catch(function () {\n        _this2.setState({\n          showSuccessMessage: false\n        });\n\n        _this2.setState({\n          hasLoginFailed: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Login\", React.createElement(FaBeer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), \"?\"), React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(MDBCol, {\n        md: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.hasLoginFailed && React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Invalid Username or Password\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Login Sucessful\"), \"User Name:\", \" \", React.createElement(\"div\", {\n        className: \"grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), \"Password:\", \" \", React.createElement(MDBInput, {\n        icon: \"lock\",\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        onClick: this.loginClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Link, {\n        className: \"nav-link\",\n        to: \"/register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Register\"))))));\n    }\n  }]);\n\n  return LoginComponent;\n}(Component);\n\nexport default LoginComponent;","map":{"version":3,"sources":["C:\\Users\\Ye Wyn\\Downloads\\insertteamnamehere\\frontend\\todo-app\\src\\components\\todo\\LoginComponent.jsx"],"names":["React","Component","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","AuthenticationService","Link","FaBeer","LoginComponent","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","history","push","catch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiDC,MAAjD,QAA+D,UAA/D;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,gBAAvB;;IAEMC,c;;;;;AAEJ,0BAAYC,KAAZ,EACA;AAAA;;AAAA;;AACE,wFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,aADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,cAAc,EAAE,KAHL;AAIXC,MAAAA,kBAAkB,EAAE;AAJT,KAAb,CAHF,CASE;AACA;;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AAZF;AAaC;;;;iCAEYE,K,EACb;AACE;AACA,WAAKC,QAAL,qBACGD,KAAK,CAACE,MAAN,CAAaC,IADhB,EACuBH,KAAK,CAACE,MAAN,CAAaE,KADpC;AAGD,K,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;mCAGA;AAAA;;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjB,MAAAA,qBAAqB,CAACkB,+BAAtB,CACE,KAAKb,KAAL,CAAWC,QADb,EAEE,KAAKD,KAAL,CAAWE,QAFb,EAIGY,IAJH,CAIQ,UAAAC,QAAQ,EACd;AACEpB,QAAAA,qBAAqB,CAACqB,6BAAtB,CACE,MAAI,CAAChB,KAAL,CAAWC,QADb,EAEEc,QAAQ,CAACE,IAAT,CAAcC,KAFhB;;AAIA,QAAA,MAAI,CAACnB,KAAL,CAAWoB,OAAX,CAAmBC,IAAnB,oBAAoC,MAAI,CAACpB,KAAL,CAAWC,QAA/C;AACD,OAXH,EAYGoB,KAZH,CAYS,YACP;AACE,QAAA,MAAI,CAACZ,QAAL,CAAc;AAAEL,UAAAA,kBAAkB,EAAE;AAAtB,SAAd;;AACA,QAAA,MAAI,CAACK,QAAL,CAAc;AAAEN,UAAAA,cAAc,EAAE;AAAlB,SAAd;AACD,OAhBH;AAiBD;;;6BAGD;AACE,aACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAS,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,KAAKH,KAAL,CAAWG,cAAX,IACC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAHJ,EAOG,KAAKH,KAAL,CAAWI,kBAAX,IAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPpC,gBASa,GATb,EAUE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,QAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKI,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAOY,GAPZ,EAQE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKG,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAVF,EA0BE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,EAAE,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CA1BF,CADF,CADF,CAFF,CADF;AA4CD;;;;EAjI0BlB,S;;AAoI7B,eAAeS,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport AuthenticationService from \"./AuthenticationService.js\";\r\nimport { Link } from 'react-router-dom'\r\nimport { FaBeer } from 'react-icons/fa'\r\n\r\nclass LoginComponent extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"feelsbadman\",\r\n      password: \"\",\r\n      hasLoginFailed: false,\r\n      showSuccessMessage: false\r\n    };\r\n    // this.handleUsernameChange = this.handleUsernameChange.bind(this)\r\n    // this.handlePasswordChange = this.handlePasswordChange.bind(this)\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.loginClicked = this.loginClicked.bind(this);\r\n  }\r\n\r\n  handleChange(event)\r\n  {\r\n    //console.log(this.state);\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  // handleUsernameChange(event) {\r\n  //     console.log(event.target.name);\r\n  //     this.setState(\r\n  //         {\r\n  //             [event.target.name]\r\n  //               :event.target.value\r\n  //         }\r\n  //     )\r\n  // }\r\n\r\n  // handlePasswordChange(event) {\r\n  //     console.log(event.target.value);\r\n  //     this.setState({password:event.target.value})\r\n  // }\r\n\r\n  loginClicked()\r\n  {\r\n    //sept,dummy\r\n    // if(this.state.username==='sept' && this.state.password==='dummy'){\r\n    //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\r\n    //     this.props.history.push(`/welcome/${this.state.username}`)\r\n    //     //this.setState({showSuccessMessage:true})\r\n    //     //this.setState({hasLoginFailed:false})\r\n    // }\r\n    // else {\r\n    //     this.setState({showSuccessMessage:false})\r\n    //     this.setState({hasLoginFailed:true})\r\n    // }\r\n\r\n    // AuthenticationService\r\n    // .executeBasicAuthenticationService(this.state.username, this.state.password)\r\n    // .then(() => {\r\n    //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\r\n    //     this.props.history.push(`/welcome/${this.state.username}`)\r\n    // }).catch( () =>{\r\n    //     this.setState({showSuccessMessage:false})\r\n    //     this.setState({hasLoginFailed:true})\r\n    // })\r\n    AuthenticationService.executeJwtAuthenticationService(\r\n      this.state.username,\r\n      this.state.password\r\n    )\r\n      .then(response =>\r\n      {\r\n        AuthenticationService.registerSuccessfulLoginForJwt(\r\n          this.state.username,\r\n          response.data.token\r\n        );\r\n        this.props.history.push(`/welcome/${this.state.username}`);\r\n      })\r\n      .catch(() =>\r\n      {\r\n        this.setState({ showSuccessMessage: false });\r\n        this.setState({ hasLoginFailed: true });\r\n      });\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <MDBContainer>\r\n        <h1>Login<FaBeer />?</h1>\r\n        <MDBRow>\r\n          <MDBCol md=\"7\">\r\n            <form>\r\n              {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\r\n              {this.state.hasLoginFailed && (\r\n                <div className=\"alert alert-warning\">\r\n                  Invalid Username or Password\r\n            </div>\r\n              )}\r\n              {this.state.showSuccessMessage && <div>Login Sucessful</div>}\r\n              {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\r\n              User Name:{\" \"}\r\n              <div className=\"grey-text\">\r\n                <MDBInput\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  value={this.state.username}\r\n                  onChange={this.handleChange}\r\n                />\r\n                Password:{\" \"}\r\n                <MDBInput\r\n                  icon=\"lock\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <MDBBtn onClick={this.loginClicked}>\r\n                  Login\r\n          </MDBBtn>\r\n                <Link className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n          </Link>\r\n              </div>\r\n            </form>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginComponent;\r\n"]},"metadata":{},"sourceType":"module"}